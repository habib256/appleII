SPACETRIP (Apple II / cc65) - Analyse détaillée pour IA
=======================================================

1) Arborescence (tree)
----------------------
.
├── DOCS
│   ├── cc65
│   │   ├── agat.html
│   │   ├── apple2enh.html
│   │   ├── apple2.html
│   │   ├── ar65.html
│   │   ├── atari2600.html
│   │   ├── atari5200.html
│   │   ├── atari7800.html
│   │   ├── atari.html
│   │   ├── atmos.html
│   │   ├── c128.html
│   │   ├── c16.html
│   │   ├── c64.html
│   │   ├── ca65.html
│   │   ├── cbm510.html
│   │   ├── cbm610.html
│   │   ├── cc65.html
│   │   ├── cc65-intern.html
│   │   ├── chrcvt65.html
│   │   ├── cl65.html
│   │   ├── co65.html
│   │   ├── coding.html
│   │   ├── cpus.html
│   │   ├── creativision.html
│   │   ├── customizing.html
│   │   ├── cx16.html
│   │   ├── da65.html
│   │   ├── debugging.html
│   │   ├── dio.html
│   │   ├── doc.css
│   │   ├── doc.png
│   │   ├── funcref.html
│   │   ├── gamate.html
│   │   ├── geos.html
│   │   ├── grc65.html
│   │   ├── index.html
│   │   ├── intro.html
│   │   ├── kim1.html
│   │   ├── ld65.html
│   │   ├── library.html
│   │   ├── lynx.html
│   │   ├── nes.html
│   │   ├── od65.html
│   │   ├── osi.html
│   │   ├── pce.html
│   │   ├── pet.html
│   │   ├── plus4.html
│   │   ├── rp6502.html
│   │   ├── sim65.html
│   │   ├── smc.html
│   │   ├── sp65.html
│   │   ├── supervision.html
│   │   ├── sym1.html
│   │   ├── telestrat.html
│   │   ├── tgi.html
│   │   ├── using-make.html
│   │   └── vic20.html
│   ├── doc_url.txt
│   ├── .DS_Store
│   ├── HELLO_WORLD-ASM
│   │   ├── HELLO.BIN
│   │   └── hello_bin.s
│   ├── HELLO_WORLD-C
│   │   ├── HELLO.C
│   │   └── README.md
│   └── HGR_TEXT_GUIDE.TXT
├── .DS_Store
├── SPACETRIP
│   ├── BASIC.SYSTEM.SYS
│   ├── IMG
│   │   ├── N001.HGR.BIN
│   │   ├── N002.HGR.BIN
│   │   ├── N003.HGR.BIN
│   │   ├── N004.HGR.BIN
│   │   ├── N005.HGR.BIN
│   │   ├── N006.HGR.BIN
│   │   ├── N007.HGR.BIN
│   │   ├── N008.HGR.BIN
│   │   ├── N009.HGR.BIN
│   │   ├── N010.HGR.BIN
│   │   ├── N011.HGR.BIN
│   │   ├── N012.HGR.BIN
│   │   ├── N013.HGR.BIN
│   │   └── N014.HGR.BIN
│   ├── IMPROVEMENTS.TXT
│   ├── Makefile
│   ├── paths.c
│   ├── paths.h
│   ├── paths.o
│   ├── PRODOS.SYS
│   ├── README.TXT
│   ├── SPACETRIP.BIN
│   ├── spacetrip.c
│   ├── spacetrip.o
│   ├── STARTUP.BAS
│   ├── TXTEN
│   │   ├── N001.TXT
│   │   ├── N002.TXT
│   │   ├── N003.TXT
│   │   ├── N004.TXT
│   │   ├── N005.TXT
│   │   ├── N006.TXT
│   │   ├── N007.TXT
│   │   ├── N008.TXT
│   │   ├── N009.TXT
│   │   ├── N010.TXT
│   │   ├── N011.TXT
│   │   ├── N012.TXT
│   │   ├── N013.TXT
│   │   └── N014.TXT
│   └── TXTFR
│       ├── N001.TXT
│       ├── N002.TXT
│       ├── N003.TXT
│       ├── N004.TXT
│       ├── N005.TXT
│       ├── N006.TXT
│       ├── N007.TXT
│       ├── N008.TXT
│       ├── N009.TXT
│       ├── N010.TXT
│       ├── N011.TXT
│       ├── N012.TXT
│       ├── N013.TXT
│       └── N014.TXT
├── SpaceTrip.2img
└── SpaceTripBasic.dsk

(9 répertoires, 120 fichiers)


2) Objectif et concept
----------------------
SpaceTrip est un mini-moteur de jeu d’aventure « data-driven » pour Apple IIe Enhanced, écrit en C avec cc65. Le binaire du moteur (~13 Ko) reste en RAM, tandis que les contenus (textes et images HGR) sont chargés dynamiquement depuis le disque ProDOS scène par scène. Ainsi, on étend le jeu en ajoutant des fichiers (IMG, TXTFR, TXTEN) sans recompiler.


3) Composants clés
------------------
- Code moteur
  - spacetrip.c: boucle principale, entrée clavier, affichage texte, bascule HGR, parsing des fichiers de scène, navigation par choix.
  - paths.c / paths.h: génération des chemins ProDOS en fonction de l’ID scène et de la langue (FR/EN).
  - Makefile: compilation via cl65 pour la cible `apple2enh`, positionnement du binaire à $4000 pour libérer $2000-$3FFF (HGR).

- Données (disque)
  - IMG/: images HGR brutes (8192 octets), nommées N001.HGR, N002.HGR, … (ici stockées en .HGR.BIN).
  - TXTFR/ et TXTEN/: textes de scènes (sans extension côté ProDOS), nommés N001, N002, … Chaque fichier contient narration + lignes de choix.

- Système/boot
  - PRODOS.SYS, BASIC.SYSTEM.SYS: fichiers système ProDOS.
  - STARTUP.BAS: programme BASIC de démarrage (binaire tokenisé), pour lancer l’exécutable.
  - SPACETRIP.BIN: exécutable cc65, binaire brut à BRUN sous ProDOS.

- Documentation
  - README.TXT: explication complète du design data-driven, formats des fichiers, compilation et exécution.
  - IMPROVEMENTS.TXT: feuille de route vers des fonctionnalités RPG (combat, inventaire, sauvegarde).
  - DOCS/HGR_TEXT_GUIDE.TXT: guide technique d’affichage texte en mode HGR (mixte, ROM, etc.).


4) Détails du code (vue IA)
---------------------------
Fichier: spacetrip.c
- Globaux principaux
  - current_scene: ID scène courant (int).
  - video_mode: 0=texte 80 colonnes, 1=HGR plein écran.
  - language: "FR" ou "EN" (deux lettres, buffer de 3 avec nul).
  - choices[MAX_CHOICES]: tableau des choix extraits d’un fichier de scène.
  - g_imgPath, g_txtPath (64 chars): chemins générés par build_paths().
  - file_buffer[1024]: tampon de lecture des fichiers texte (taille max scène ~1 Ko).

- Fonctions
  - load_hgr_image(scene_id):
    - build_paths(scene_id, language, …)
    - fopen(IMG/Nxxx.HGR), fread 8192 octets -> mémoire HGR Page 1 à $2000.
    - Vérifie taille lue == 8192.

  - enable_text_mode(): active mode texte via soft switch $C051 (TXTSET).
  - enable_hgr_full(): active HGR plein écran via $C050 (TXTCLR), $C057 (HIRES), $C054 (LOWSCR), $C052 (MIXCLR).

  - display_scene_text(scene_id):
    - Mode texte 80 colonnes, clear, ouvre TXT<lang>/Nxxx.
    - Lit dans file_buffer, parse ligne par ligne.
    - Ligne choix: préfixe "C ", format "C <id> <titre>" -> remplit `choices`.
    - Autre ligne non vide: impression telle quelle.
    - Affiche liste des choix A), B), … puis rappel commandes.

  - cycle_video_mode(): alterne 0<->1; en 0 réaffiche le texte; en 1 bascule HGR.

  - load_scene(scene_id):
    - Mémorise ID courant, charge image HGR, puis affiche texte si video_mode==0 sinon active HGR.

  - main():
    - Sélection langue [F]/[E].
    - Écran de titre (localisé), attente touche.
    - load_scene(1), puis boucle principale:
      - ' ' -> cycle_video_mode();
      - 'Q' -> retour texte 40 colonnes, message, fin;
      - 'A'..'Z' -> map vers index 0..25, si < num_choices -> charge la scène ciblée.

Points d’attention (IA)
- file_buffer (1024) limite la taille des textes de scène; lignes >119 chars sont tronquées (MAX_LINE=120).
- MAX_CHOICES=10; les choix excédentaires sont ignorés.
- Aucune pagination du texte; longs fichiers s’affichent d’un bloc.
- Pas d’extension .TXT côté chemins ProDOS (TXTFR/N001, TXTEN/N001).

Fichier: paths.c / paths.h
- build_paths(scene_id, lang, imgPath, txtPath):
  - Valide 0..999, émet "IMG/N%03u.HGR" et "TXT%s/N%03u".
  - Retourne 0 si ok, -1 si hors plage.

Fichier: Makefile
- Cible: `apple2enh` (65C02). Flags: `-O -Oirs` (optis), `-Wl -S,0x4000` (binaire à $4000), `-Wl -D,__EXEHDR__=0` (binaire brut sans en-tête).
- Règles: all/clean/rebuild/info/structure.


5) Formats des données
----------------------
- Fichiers texte de scènes (TXTFR/Nxxx, TXTEN/Nxxx)
  - Narration libre (80 colonnes conseillées).
  - Choix: lignes commençant par "C ", format exact: `C <scene_id> <titre>`.
  - Exemple (FR):
    C 002 Direction la planète des forêts éternelles

- Images HGR (IMG/Nxxx.HGR)
  - Taille exacte 8192 octets (Page 1, $2000-$3FFF).
  - Résolution 280x192, palette Apple II standard.


6) Carte mémoire et soft switches
---------------------------------
- HGR Page 1: $2000-$3FFF (8 Ko) — tampon image.
- Code moteur: ~13 Ko à partir de $4000.
- Soft switches utilisés:
  - $C050 TXTCLR, $C051 TXTSET, $C052 MIXCLR, $C053 MIXSET, $C054 LOWSCR, $C057 HIRES.


7) Entrées utilisateur
----------------------
- Au lancement: [F]/[E] choix langue.
- En jeu: [ESPACE] alterne texte/HGR, [A-Z] choisit A=0, B=1, …, [Q] quitte.


8) Limites, risques, améliorations (rapides)
--------------------------------------------
- Taille texte scène: buffer 1024 octets; envisager 2-4 Ko si nécessaire.
- Longues scènes: pagination (appui touche pour continuer).
- Robustesse parsing: ignorer espaces, valider ID choix, gérer titres vides.
- Messages d’erreur plus clairs; sons de feedback (voir IMPROVEMENTS.TXT 2.5).
- Extension commandes: [H]elp, [M]ap (voir IMPROVEMENTS.TXT 1.3, 1.5).
- Sauvegarde/charge (IMPROVEMENTS.TXT 2.4) via fichiers ProDOS.


9) Extension de contenu (modding)
---------------------------------
- Ajouter une scène N014:
  - IMG/N014.HGR (8192 octets), TXTFR/N014 et TXTEN/N014.
  - Relier depuis une scène existante via une ligne `C 014 <titre>`.
  - Aucune recompilation requise; BRUN SPACETRIP suffit.


10) Compilation et exécution
----------------------------
- Compilation: `make` (ou `cl65 -t apple2enh -O -Oirs -Wl -D,__EXEHDR__=0 -Wl -S,0x4000 -o SPACETRIP.BIN spacetrip.c paths.c`).
- Exécution sous ProDOS: `]BRUN SPACETRIP`.
- Disques fournis: `SpaceTrip.2img`, `SpaceTripBasic.dsk` (images disque Apple II).


11) Pseudocode (boucle principale)
----------------------------------
init: choisir langue (FR/EN)
afficher_titre_localisé()
load_scene(1)
loop:
  key = cgetc()
  if key == ' ': cycle_video_mode()
  elif key in 'Qq': quitter()
  elif key in 'A'..'Z' or 'a'..'z':
    idx = letter_to_index(key)
    if idx < num_choices: load_scene(choices[idx].scene_id)


12) Repères pour une IA (où intervenir)
---------------------------------------
- Affichage texte: `display_scene_text()` — pagination, UI, localisation messages.
- HGR: `load_hgr_image()`, `enable_hgr_full()` — ajout mode mixte (4 lignes texte), overlays.
- Navigation: structure `Choice` et tableau `choices` — limites, tri, labels.
- Parsing: rendre robuste (espaces, CR/LF), supporter attributs (ex: [LOCK:3]).
- Persistance: module save/load (fichiers ProDOS), struct SaveGame minimaliste.
- Extensibilité: inventaire/combat (voir IMPROVEMENTS.TXT — structures Player/Monster/Item/Door).


13) TL;DR (mémo rapide)
-----------------------
- Moteur C cc65 (13 Ko @ $4000). Images HGR à $2000 (8192 octets).
- Contenu sur disque: IMG/Nxxx.HGR, TXTFR/Nxxx, TXTEN/Nxxx.
- Fichiers texte: narration libre + lignes `C <id> <titre>`.
- Commandes: [SPACE] toggle HGR/texte, [A-Z] choix, [Q] quitter.
- Ajouts de scènes sans recompiler: copier fichiers, relier via `C ...`.

Fin du document.
