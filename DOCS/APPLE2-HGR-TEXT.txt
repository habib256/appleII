Apple II HGR et Texte sans TGI (cc65)

1) Soft-switches vidéo utiles (lecture pour activer)
   - $C050 TXTCLR : bascule en affichage graphique
   - $C051 TXTSET : bascule en affichage texte
   - $C052 MIXCLR : désactive le mode mixte (pas de 4 lignes texte)
   - $C053 MIXSET : active le mode mixte (4 lignes texte en bas)
   - $C054 LOWSCR : rend visible la page 1 HGR ($2000)
   - $C055 HISCR  : rend visible la page 2 HGR ($4000)
   - $C056 LORES  : active lores (40x48)
   - $C057 HIRES  : active hires (280x192)
   - $C05E DHIRESON / $C05F DHIRESOFF : double-width graphics ON/OFF

2) Routines ROM HGR (sans TGI)
   - $F3E2 HGR   : init + clear HGR page 1 et passe en graphique
   - $F3D8 HGR2  : init + clear HGR page 2
   - $F3F2 HCLR  : clear de la page courante
   - $F6EC SETHCOL (X=0..7) : définit la couleur HGR
   - $F411 HPOSN (A=Y, Y:X=X) : positionne curseur HGR
   - $F457 HPLOT : trace un point
   - $F53A HLIN  : trace une ligne depuis la position courante

3) Pages HGR visibles et de dessin (double buffering)
   - Page visible: LOWSCR/HISCR (via soft-switch)
   - Page de dessin: ZP PAGE ($E6) = $20 (page1) ou $40 (page2)
     Exemple C (cc65):
       POKE(0xE6, 0x20); // dessiner en page 1 (0x2000)
       POKE(0xE6, 0x40); // dessiner en page 2 (0x4000)

   - Flip simple:
       front=0; back=1; // 0=page1, 1=page2
       // dessiner sur back...
       SW(back?0xC055:0xC054); // rendre back visible
       POKE(0xE6, front?0x40:0x20); // future page de dessin = ancienne front
       // swap(front,back)

4) Mode mixte (4 lignes de texte)
   - Activer: lire $C053 (MIXSET). Désactiver: lire $C052 (MIXCLR).
   - Permet d’afficher du texte en bas tout en gardant HGR au-dessus.

5) Positionner précisément du texte sans TGI (conio cc65)
   - Variables vidéo texte (ZP, apple2.inc):
       CH   ($24) : colonne (0..39 ou 0..79 selon mode 40/80)
       CV   ($25) : ligne (0..23)
       WNDTOP ($22), WNDBTM ($23), WNDLFT ($20), WNDWDTH ($21) : fenêtre texte
       BASL/BASH ($28/$29) : base écran pour VTABZ
   - API conio recommandée:
       gotoxy(x,y)         : positionne le curseur (relatif à WNDTOP)
       cputc(c) / cputcxy  : affiche un caractère (écrit à (BASL),CH)
       cclearxy(x,y,len)   : efface len caractères (espaces)
       clrscr()            : efface la fenêtre texte courante
       wherey()/wherex()   : récupère la position
       screensize(&w,&h)   : dimensions fenêtre

   - Détails internes (libsrc/apple2/cputc.s):
       - gotoxy met à jour CV puis appelle VTABZ (calcule BASL/BASH). CH est mis à x.
       - cputc écrit (BASL),CH en appliquant INVFLG (inverse/flash). Gère 80 colonnes
         via OURCH en mode 80-col (//e).
       - newline incrémente CV, reboucle sur WNDTOP/WNDBTM et appelle VTABZ.

   - Exemple: placer du texte à une position précise (40 colonnes)
       // repasser en texte si nécessaire
       (void)PEEK(0xC051); // TXTSET
       gotoxy(10,5); cputs("SCORE: 1234");

   - Exemple: en mode mixte HGR+texte, limiter la zone texte (4 dernières lignes)
       (void)PEEK(0xC053); // MIXSET
       gotoxy(0,20); cclearxy(0,20,40); cputs("Etat...");

6) Texte 80 colonnes (//e)
   - Utiliser videomode(VIDEOMODE_80COL) pour basculer en 80x24; retour en 40x24
     avec videomode(VIDEOMODE_40COL).
   - En 80 colonnes, conio gère OURCH (mémoires main/aux) pour les colonnes paires/impaires.

7) Afficher une image HGR brute sans TGI
   - Page 1: charger 8K à $2000; Page 2: à $4000.
   - Compilez votre binaire plus haut (ex: --start-addr 0x4000) pour éviter d’écraser HGR.
   - Séquence:
       (void)PEEK(0xC057); (void)PEEK(0xC050);   // HIRES + graphics
       // HGR/HGR2 via pointeurs si souhaité
       // read(fd, (void*)0x2000, 0x2000);
       (void)PEEK(0xC054);               // LOWSCR (page 1 visible)

8) Macros C utiles (cc65)
   #include <peekpoke.h>
   #define SW(a) (void)PEEK(a)
   static inline void hgr_on(void)  { SW(0xC057); SW(0xC050); }
   static inline void hgr_off(void) { SW(0xC051); }
   static inline void hgr_mix(int on){ SW(on?0xC053:0xC052); }
   static inline void hgr_view(int p){ SW(p?0xC055:0xC054); }
   static inline void hgr_draw(int p){ POKE(0xE6, p?0x40:0x20); }

9) Compilation
   - 40 colonnes texte: cl65 -t apple2 -O -o demo demo.c
   - HGR avec chargement brut: cl65 -t apple2 --start-addr 0x4000 -O -o show show.c
